Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

My Solution:
public boolean isValid(String s) {
        if(s==null||s.length()==0||(s.length()%2)!=0) return false;
        char[] cs = s.toCharArray();
        Stack<Character> stack = new Stack<>();
        for(char c : cs){
            if(c=='('||c=='{'||c=='['){
                stack.push(c);
            }else{
                if(stack.size()==0) return false;
                char t = stack.pop();
                if(!((c-t)==1||(c-t)==2))
                    return false;
            }
        }
        if(stack.size()==0)
            return true;
        else
            return false;

    }

Smart Solution:
public class Solution {
   public boolean isValid(String s) {
	Stack<Character> stack = new Stack<Character>();
	for (char c : s.toCharArray()) {
		if (c == '(')
			stack.push(')');
		else if (c == '{')
			stack.push('}');
		else if (c == '[')
			stack.push(']');
		else if (stack.isEmpty() || stack.pop() != c)
			return false;
	}
	return stack.isEmpty();
}
}