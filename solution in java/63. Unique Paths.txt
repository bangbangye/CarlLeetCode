Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

Note: m and n will be at most 100.

My Solution:

public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int[] flag = new int[obstacleGrid.length];
        
        flag[0] = 1;
        
        for(int i=0;i<obstacleGrid[0].length;i++){
            for(int j=0;j<obstacleGrid.length;j++){
                if(obstacleGrid[j][i]==1)
                    flag[j] = 0;
                else if(j>0)
                    flag[j] += flag[j-1];
            }
        }
        return flag[obstacleGrid.length-1];
    }
}