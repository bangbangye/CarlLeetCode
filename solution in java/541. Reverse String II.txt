Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]

My Solution:

public class Solution {
   public String reverseStr(String s, int k) {
        if(k==1)
            return s;
        StringBuffer sb = new StringBuffer();

        int count = s.length()/(2*k);
        for(int i=0;i<=count;i++){
            String temp;
            if(i==count){
                temp = reverse(s.substring(2*k*i,s.length()),k);
            }else{
                temp = reverse(s.substring(2*k*i,2*k*i+2*k),k);
            }
            sb.append(temp);
        }
        return sb.toString();
    }

    public String reverse(String s,int k){
        char[] cs = s.toCharArray();
        int len = cs.length;
        if(len>k){
            len = k;
        }
        int i = 0;
        char temp;
        while(i<len/2){
            temp = cs[len-1-i];
            cs[len-1-i] = cs[i];
            cs[i] = temp;
            i++;
        }
        return new String(cs);
    }
    
    
}

Best Solution£º

