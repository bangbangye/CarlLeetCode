Given a list of non negative integers, arrange them such that they form the largest number.

For example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.

Note: The result may be very large, so you need to return a string instead of an integer.

My Solution:

public class Solution {
    public String largestNumber(int[] nums) {
        int l = nums.length;
        for(int i=l-1;i>=0;i--){
            for(int j=0;j<=i-1;j++){
                if(-1==largerNum(nums[j],nums[j+1])){
                    int temp = nums[j];
                    nums[j] = nums[j+1];
                    nums[j+1] = temp;
                }
            }
        }
        if(nums[0]==0) return 0+"";
        String s = "";
        for(int j=0;j<l;j++){
            s+=nums[j];
        }
        return s;
    }
    
    public int largerNum(int a,int b){
        long ab = Long.parseLong(a+""+b);
        long ba = Long.parseLong(b+""+a);
        if(ab>ba)
            return 1;
        else
            return -1;
        
    }
}

Simple Solution:

 String[] array = Arrays.stream(num).mapToObj(String::valueOf).toArray(String[]::new);
        Arrays.sort(array, (String s1, String s2) -> (s2 + s1).compareTo(s1 + s2));
        return Arrays.stream(array).reduce((x, y) -> x.equals("0") ? y : x + y).get();