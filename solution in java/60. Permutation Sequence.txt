The set [1,2,3,бн,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

My Solution:

public class Solution {
    public String getPermutation(int n, int k) {
        List<Integer> list = new LinkedList();
        for(int i=1;i<=n;i++)
            list.add(i);
        List<Integer> result = new LinkedList();
        
         while(n!=0){
            int a = (k-1)/calN(n-1);
            int b = a==0?k:k-a*calN(n-1);
            result.add(list.get(a));
            list.remove(a);
            k = b;
            n--;
        }
        String str = "";
        for(int i:result){
            str = str+i;
        }
        return str;
    }
    
    public int calN(int n){
        if(n==0||n==1)
            return 1;
            
        int total = 1;
        for(int i=2;i<=n;i++){
            total*=i;
        }
        return total;
    }
}

Best Solution:
