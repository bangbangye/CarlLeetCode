Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.

Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number n, return if n new flowers can be planted in it without violating the no-adjacent-flowers rule.

Example 1:
Input: flowerbed = [1,0,0,0,1], n = 1
Output: True
Example 2:
Input: flowerbed = [1,0,0,0,1], n = 2
Output: False
Note:
The input array won't violate no-adjacent-flowers rule.
The input array size is in the range of [1, 20000].
n is a non-negative integer which won't exceed the input array size.

My Solution:
public class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        if(n==0) return true;
        int idx = 0;
        int len = flowerbed.length;
        int count = 0;

        while(idx<len){
            if(flowerbed[idx]==1){
                idx+=2;
            }else if((idx==0||flowerbed[idx-1]==0)&&((idx+1)==len||flowerbed[idx+1]==0)){
                count++;
                idx+=2;
            }else{
                idx++;
            }
            if(count==n)
                return true;
        }
        return false;       
    }
}