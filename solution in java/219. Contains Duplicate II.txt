Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

给定一个数组及k，判断是否有k以内间距的 nums[i] = nums[j]（j-i<=k）

Solution：
public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        int len = nums.length-1;
        Map<Integer,Integer> map = new HashMap<>();
        
        for(int i=0;i<len+1;i++){
            if(!map.containsKey(nums[i])){
                map.put(nums[i],i);
            }else if((i-map.get(nums[i]))<=k){
                return true;
            }else{
                map.put(nums[i],i);
            }
        }
        return false;
    }
}

public boolean containsNearbyDuplicate(int[] nums, int k) {
        Set<Integer> set = new HashSet<Integer>();
        for(int i = 0; i < nums.length; i++){
            if(i > k) set.remove(nums[i-k-1]);
            if(!set.add(nums[i])) return true;
        }
        return false;
 }