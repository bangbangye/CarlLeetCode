Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

Solution :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null||head.next==null||k==0) return head;
        
        int len;
        //虚拟起点，在head之前
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        //找到初始的end
        ListNode end = dummy;
        for(len=0;end.next!=null;len++){
            end = end.next;
        }
        //找到旋转之后的end
        int y = k%len;
        ListNode newEnd = dummy;
        for(int i=0;i<(len-y);i++){
            newEnd = newEnd.next;
        }
        //旋转，头尾转换
        end.next = dummy.next;
        dummy.next = newEnd.next;        
        
        newEnd.next = null;
        
        return dummy.next;
        
    }
}