Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N ? h papers have no more than h citations each."

For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.

Note: If there are several possible values for h, the maximum one is taken as the h-index.

学者的论文，至少有h篇拥有至少h个引用，则成为h-index

My solution：
public class Solution {
    public int hIndex(int[] citations) {
        int len = citations.length;
        int sum = 0;
        for(int c : citations)
            sum+=c;
        if(sum==0)
            return 0;
        sum = (int)Math.floor(Math.sqrt(sum));
        List<Integer> hs = new ArrayList<>();
        for(int i=0;i<=sum;i++){
            int h = 0;
            for(int c : citations){
                if(c>=i)
                    h++;
                if(h>i)
                    break;
            }
            if(h>=i)
                hs.add(i);
        }
        int max = 0;
        for(int c : hs){
            if(c>=max)
                max = c;
        }
        return max;
    }
}


Best Solution：
public class Solution {
    public int hIndex(int[] citations) {
        int len = citations.length;
        if(len==0)
            return 0;
        int[] bucket = new int[len+1];
        for(int i=0;i<len;i++){
            if(citations[i]>=len)
                bucket[len]+=1;
            else
                bucket[citations[i]]+=1;
        }
        int t = 0;
        for(int i=len;i>=0;i--){
            t+=bucket[i];
            if(t>=i)
                return i;
        }
        return 0;
    }
}