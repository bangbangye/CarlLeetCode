Given an array of size n, find the majority element. The majority element is the element that appears more than ? n/2 ? times.

You may assume that the array is non-empty and the majority element always exist in the array.

My Solution:
class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
	return nums[nums.length/2];
    }
}

Solution: Moore's voting algorithm

class Solution {
    public int majorityElement(int[] nums) {
        int mask = 0;
        int count = 0;
	//遍历数组，每次去掉一组不同的数，剩下的数就是目标值
        for(Integer num:nums){
            if(count==0) mask = num;
            if(mask!=num){
                count--;
            }else
                count++;
        }
        return mask;
    }
}