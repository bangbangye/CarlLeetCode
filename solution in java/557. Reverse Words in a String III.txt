Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.


My Solution:

public class Solution {
    public String reverseWords(String s) {
        String[] strs = s.split(" ");
        StringBuffer sb = new StringBuffer();
        for(String str:strs){
            char[] chars = str.toCharArray();
            int head = 0;
            int end = chars.length-1;
            int mid = (head+end)/2;
            while(end>head){
                char t = chars[end];
                chars[end] = chars[head];
                chars[head] = t;
                head++;
                end--;
            }
            str = new String(chars);
            sb.append(str).append(" ");
        }
        return sb.toString().substring(0,sb.toString().lastIndexOf(" "));    }
}

