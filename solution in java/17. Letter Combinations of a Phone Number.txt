Given a digit string, return all possible letter combinations that the number could represent.

A mapping of digit to letters (just like on the telephone buttons) is given below.



Input:Digit string "23"
Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
Note:
Although the above answer is in lexicographical order, your answer could be in any order you want.

My:

public class Solution {
    public List<String> letterCombinations(String digits) {
        
        LinkedList<String> res = new LinkedList();
        if(digits==null||"".equals(digits)) return res;
        res.add("");
        String[] mapping = new String[] {"0", "1", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        
        for(int i=0;i<digits.length();i++){
            int x = Character.getNumericValue(digits.charAt(i));
            while(res.peek().length()==i){
                String str = res.remove();
                for(int k=0;k<mapping[x].length();k++){
                    res.add(str+mapping[x].charAt(k));
                }
            }
        }
        return res;
    }
}