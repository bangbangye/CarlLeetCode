Given a string, find the length of the longest substring without repeating characters.

寻找给定字符串的最长无重复字符的子串长度
Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

Subscribe to see which companies asked this question.


public class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        char[] c = s.toCharArray();
        if(c.length==0) return 0;
        int max = 0;
        int inx = 0;
        Map<Character,Integer> map = new HashMap();
        for(int i=0;i< c.length;i++){
            if(map.get(c[i])!=null){
                inx = Math.max(inx,(map.get(c[i])+1));
                
            }
            map.put(c[i],i);
            max = Math.max(max,(i-inx+1));
        }
        return max;
    }
}