Given a string s, partition s such that every substring of the partition is a palindrome.

Return the minimum cuts needed for a palindrome partitioning of s.

把字符串切割，子串都是回文的最少切割次数

For example, given s = "aab",
Return 1 since the palindrome partitioning ["aa","b"] could be produced using 1 cut.

Subscribe to see which companies asked this question.

public class Solution {
    public int minCut(String s) {
        char[] c = s.toCharArray();
        int n = c.length;
        int[] cut = new int[n];
        boolean[][] pal = new boolean[n][n];

        for(int i=0;i<n;i++){
            cut[i] = i;
            for(int j=i;j>=0;j--){
                if(c[i]==c[j]&&((i-j)<2||pal[i-1][j+1])){
                    pal[i][j] = true;
                    if(j==0){
                        cut[i] = 0;
                    }else if((cut[j-1]+1)<cut[i]){
                        cut[i] = cut[j-1]+1;
                    }
                }
            }
        }
        return cut[n-1];
    }
}